#ifndef VOC_DLGCURVEMANGE_H
#define VOC_DLGCURVEMANGE_H

#include <QDialog>
#include <QTableWidgetItem>
#include "../core/paramdict.h"
#include "../core/cdbbusiness.h"
namespace Ui {
class voc_dlgCurveMange;
}
class MyPlot;
class voc_dlgCurveMange : public QDialog
{
    Q_OBJECT
    
public:
    explicit voc_dlgCurveMange(QWidget *parent = 0);
    ~voc_dlgCurveMange();
    
private slots:
    void on_tableWidget_Dots_cellChanged(int row, int column);

    void on_tableWidget_name_cellChanged(int row, int column);


    void on_tableWidget_name_currentCellChanged(int currentRow, int currentColumn, int previousRow, int previousColumn);

    void on_lineEdit_WinFactor_textChanged(const QString &arg1);

    void on_lineEdit_MinPW_textChanged(const QString &arg1);

    void on_lineEdit_MaxPW_textChanged(const QString &arg1);

    void on_lineEdit_Miniumum_textChanged(const QString &arg1);

    void on_lineEdit_MinArea_textChanged(const QString &arg1);

    void on_lineEdit_Baseline_textChanged(const QString &arg1);

    void on_pbtCurve_clicked();

    void on_chk_noicepoint_clicked();

    void on_lineEdit_noicePoint_textChanged(const QString &arg1);

    void on_pbtClose_clicked();

    void on_tableWidget_Dots_cellDoubleClicked(int row, int column);
    void OncurveLineEditTextChanged(const QString arg1);

    void on_tableWidget_name_cellDoubleClicked(int row, int column);
    void OnparaLineEditTextChanged(const QString arg1);
    void on_chkKind_clicked();

    void on_pbtAdjust_clicked();

    void on_lineEdit_ModifyB_textChanged(const QString &arg1);
    void on_tableWidget_Dots_currentCellChanged(int currentRow, int currentColumn, int previousRow, int previousColumn);

private:
    void GetParamDictList();
    void InitParamDots();
    void RefreshDots();

    void ShowCurve(int nNumber);

    void CurveCouvade();
    void Couvade(double* Y,double* X,int nNumber,double* K,double* B,double* R);

private:
    Ui::voc_dlgCurveMange *ui;

     MyPlot *m_plot;
     QVector<double> m_vtConc,m_vtAera;

     CDBBusiness* m_pDB;
     QString m_qsCodeID;
     bool   m_bDotsFinish;
     bool   m_bRtInitFinsh;

     int m_row,m_column;
     QLineEdit* m_lineedit;

};

#endif // VOC_DLGCURVEMANGE_H

#include "dlgmodeltest14.h"
#include "ui_dlgmodeltest14.h"

dlgmodeltest14::dlgmodeltest14(CMainCtrl* pMC,QWidget *parent) :
    QWidget(parent),
    ui(new Ui::dlgmodeltest14)
{
    ui->setupUi(this);
    m_pMC = pMC;
    for(int k = 0;k < 7;k++)
    {
        m_nStatus[k] = 0;
    }
    //获取仪器
    for(int i = 0;i < YQMAXCOUNT;i++)
    {
        if(m_pMC->pYQs->pYQ[i])
        {
            pYQ = m_pMC->pYQs->pYQ[i];
            break;
        }
    }
}

dlgmodeltest14::~dlgmodeltest14()
{
    delete ui;
}

void dlgmodeltest14::on_btnStatus_clicked()
{
    if(false == judgeYQConnect()) return;
    int16_t nStatus = 0;
    float fValue1 = 0.0;
    float fValue2 = 0.0;
    float fValue3 = 0.0;
    float fValue4 = 0.0;

    unsigned char bBuff[MAX_SIZE];
    memset(bBuff,0,MAX_SIZE);
    usleep(50000);
    if(pYQ->m_pProcess->pDriver->ReadModbus(CMD_SMOKEGAS,40052,7,bBuff))
    {
        //获取电磁阀状态，16位当为1时相应的电磁阀打开，0时为关闭
        m_nStatus[0] = bBuff[9] & 0x01; // 最低位
        m_nStatus[1] = ( bBuff[9] & 0x02) >> 1;
        m_nStatus[2] = ( bBuff[9] & 0x04) >> 2;
        m_nStatus[3] = bBuff[13] & 0x01;
        m_nStatus[4] = ( bBuff[13] & 0x02) >> 1;
        m_nStatus[5] = ( bBuff[13] & 0x04) >> 2;
        m_nStatus[6] = ( bBuff[13] & 0x03) >> 3;

        QPushButton *pbs[7] = { ui->btnled_5, ui->btnled_6, ui->btnled_7,ui->btnled_1,
                                ui->btnled_2, ui->btnled_3, ui->btnled_4};
        for(int i=0;i<7;i++)
        {
            QPushButton *pb = pbs[i];
            if(m_nStatus[i])
            {
                pb->setIcon(QIcon(":/res/green.png"));
            }
            else
            {
                pb->setIcon(QIcon(":/res/gray.png"));
            }
        }

        nStatus = MAKEWORD(bBuff[1],bBuff[0]);	//40052 模块的工作状态
        if(0 == nStatus)
        {
            ui->labelStatus->setText("模块状态:空闲");
        }
        else if(1 == nStatus)
        {
             ui->labelStatus->setText("模块状态:工作");
        }
        else
        {
            ui->labelStatus->setText("模块状态:信息错误");
        }

        fValue1 = MAKEWORD(bBuff[3],bBuff[2])/100.0;//第一路温度
        fValue2 = MAKEWORD(bBuff[5],bBuff[4])/100.0;//第二路温度
        fValue3 = MAKEWORD(bBuff[7],bBuff[6]);//流速电压
        qDebug("fValue3:%f",fValue3);
        fValue3 = (0.02963*pow((fValue3/100.0),3.0)-0.19921*pow((fValue3/100.0),2.0)+0.52865*(fValue3/100.0)-0.37459);//经过校准后
        fValue4 = MAKEWORD(bBuff[11],bBuff[10]);//氧电压
        qDebug("fValue4:%f",fValue4);
        fValue4 = 25.0*fValue4/15.5;//校准后的值
        ui->lineEditTemp1->setText(QString::number(fValue1,'f',1));
        ui->lineEditTemp2->setText(QString::number(fValue2,'f',1));
        ui->lineEditFlow->setText(QString::number(fValue3,'f',1));
        ui->lineEdit02->setText(QString::number(fValue4,'f',1));

    }
    else
    {
        QMessageBox::information(NULL, "提示信息","读状态通讯故障!");
    }
}

void dlgmodeltest14::on_chkSingleCtrl_1_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFA,1,arg1))//电磁阀1
    {
        on_btnStatus_clicked();
    }
}

void dlgmodeltest14::on_chkSingleCtrl_2_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFA,2,arg1))//电磁阀2
    {
        on_btnStatus_clicked();
    }
}

void dlgmodeltest14::on_chkSingleCtrl_3_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFA,3,arg1))//电磁阀3
    {
        on_btnStatus_clicked();
    }
}
//采样泵
void dlgmodeltest14::on_chkSingleCtrl_4_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 = 1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFB,arg1,0))//arg1为1时采样泵打开，电机一直都关闭
    {
        on_btnStatus_clicked();
    }
}
//电机正转
void dlgmodeltest14::on_chkSingleCtrl_5_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFB,0,arg1))
    {
        on_btnStatus_clicked();
    }
}
//风扇1
void dlgmodeltest14::on_chkSingleCtrl_6_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFD,1,arg1))
    {
        on_btnStatus_clicked();
    }
}
//风扇2
void dlgmodeltest14::on_chkSingleCtrl_7_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFD,2,arg1))
    {
        on_btnStatus_clicked();
    }
}
//风扇3
void dlgmodeltest14::on_chkSingleCtrl_8_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(2 == arg1)
    {
        arg1 =1;
    }
    if(SendControlCmd(CMD_SMOKEGAS,0xFD,3,arg1))
    {
        on_btnStatus_clicked();
    }
}
bool dlgmodeltest14::judgeYQConnect()
{
    //获取仪器
    for(int i = 0;i < YQMAXCOUNT;i++)
    {
        if(m_pMC->pYQs->pYQ[i])
        {
            pYQ = m_pMC->pYQs->pYQ[i];
            break;
        }
    }
    if(NULL == pYQ)
    {
        QMessageBox::information(NULL, "提示信息", "仪器获取失败!");
        return false;
    }
    else
    {
        return true;
    }
}
bool dlgmodeltest14::SendControlCmd(int nAdd,int cmd,int nIO,int nOnOff)
{
    int16_t wValue = 0;
    bool bRet = false;
    unsigned char bBuff[MAX_SIZE];
    memset(bBuff,0,MAX_SIZE);
    wValue = cmd; //命令字
    bBuff[0] = HIBYTE(wValue);
    bBuff[1] = LOBYTE(wValue);
    wValue = nIO;//通道
    bBuff[2] = HIBYTE(wValue);
    bBuff[3] = LOBYTE(wValue);
    wValue = nOnOff;//开关
    bBuff[4] = HIBYTE(wValue);
    bBuff[5] = LOBYTE(wValue);

    if (pYQ->m_pProcess->pDriver->WriteModbus(nAdd,40001,3,bBuff))
    {
        bRet = true;
    }
    else
    {
        QMessageBox::information(NULL, "提示信息","通讯故障!");
    }
    return bRet;

}
//电机反转 arg1为2时则反转
void dlgmodeltest14::on_chkSingleCtrl_9_stateChanged(int arg1)
{
    if(false == judgeYQConnect()) return;
    if(SendControlCmd(CMD_SMOKEGAS,0xFB,0,arg1))//打开电磁阀4
    {
        on_btnStatus_clicked();
    }
}
